name: Release Build for Android and iOS

on:
  push:
    branches:
      - main # mainブランチにマージされたら実行
      - feat/setup-ci # テスト用に現在のブランチを追加
  workflow_dispatch: {} # GitHub上で手動実行するためのトリガー

env:
  BUILD_NUMBER_OFFSET: 3 # Current highest build number in the stores

permissions:
  contents: write

jobs:
  build-android:
    name: Build Android App Bundle
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # プロジェクトに合わせたバージョンを指定

      - name: Install dependencies
        run: npm install

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Decode Keystore
        run: echo -n "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 --decode > "${{ github.workspace }}/release.keystore"

      - name: Build and Sign Android App Bundle
        run: cd android && ./gradlew bundleRelease -PversionCode=$((${{ env.BUILD_NUMBER_OFFSET }} + ${{ github.run_number }}))
        env:
          MYAPP_UPLOAD_STORE_FILE: ${{ github.workspace }}/release.keystore
          MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.ANDROID_ALIAS }}
          MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Create or Update Draft Release and Upload Android Asset
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: build-${{ github.run_number }}
          files: android/app/build/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS App
    runs-on: macos-latest  # Use latest for Xcode 16.1+
    timeout-minutes: 60  # Extended timeout for React Native + CocoaPods build
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install npm dependencies
        run: npm install

      - name: Cache CocoaPods dependencies
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache derived data
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-derived-data-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-derived-data-

      - name: Set up Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6.10' # From Gemfile
          bundler-cache: true # Runs bundle install

      - name: Install CocoaPods
        run: cd ios && pod install

      - name: Build iOS App with fastlane
        run: cd ios && bundle exec fastlane ios build_release
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}

      - name: Upload iOS Asset to Draft Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true  # 絶対に公開しない - IPAファイルを保護
          tag_name: build-${{ github.run_number }}
          files: |
            ios/build/FlowCards.ipa
            ios/build/FlowCards.app.dSYM.zip